{"version":3,"file":"static/js/301.a7d5acf2.chunk.js","mappings":"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","sources":["pages/NewOrder.js","services/config.js","services/orders.js","services/products.js","utils.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { CloseIcon } from '@chakra-ui/icons';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Divider,\n  Flex,\n  Grid,\n  IconButton,\n  Input,\n  SimpleGrid,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from '@chakra-ui/react';\n\nimport { getProducts } from '../services/products';\nimport { formatPrice } from '../utils';\nimport { createOrder } from '../services/orders';\n\nconst NewOrder = () => {\n  const [products, setProducts] = useState([]);\n  const [orderProducts, setOrderProducts] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  const handleAddProduct = (product) => {\n    setOrderProducts([...orderProducts, product]);\n  };\n\n  const handleDeleteProduct = (product) => {\n    setOrderProducts(orderProducts.filter((item) => item.id !== product.id));\n  };\n\n  const handleCreateOrder = (e) => {\n    e.preventDefault();\n    const { client } = e.target.elements;\n    const user = JSON.parse(localStorage.getItem('USER'));\n    createOrder({\n      client: client.value,\n      products: orderProducts,\n      status: 'pending',\n      userId: user.id,\n      total,\n    }).then(() => {\n      setOrderProducts([]);\n      setTotal(0);\n      client.value = '';\n    });\n  };\n\n  useEffect(() => {\n    setTotal(orderProducts?.reduce((acc, product) => acc + product.price, 0));\n  }, [orderProducts]);\n\n  useEffect(() => {\n    getProducts().then((products) => {\n      const newProducts = {};\n      for (const item of products) {\n        const { category, type } = item;\n        if (!newProducts[type]) newProducts[type] = {};\n        if (!newProducts[type][category]) newProducts[type][category] = [];\n        newProducts[type][category].push(item);\n      }\n      setProducts(newProducts);\n    });\n  }, []);\n\n  return (\n    <SimpleGrid columns={{ lg: '2' }} gap={{ base: '8', lg: '24' }}>\n      <Tabs colorScheme='yellow' isFitted size='lg' variant='enclosed'>\n        <TabList color='whiteAlpha.700' mb='1em'>\n          {Object.keys(products).map((type) => (\n            <Tab\n              key={type}\n              letterSpacing='wider'\n              textTransform='uppercase'\n              _selected={{\n                bg: 'yellow.500',\n                border: '1px solid',\n                borderColor: 'gray.200',\n                color: 'white',\n                fontWeight: 'semibold',\n              }}\n            >\n              {type}\n            </Tab>\n          ))}\n        </TabList>\n        <TabPanels>\n          {Object.keys(products).map((type) => (\n            <TabPanel as={Flex} flexDir='column' gap='8' key={`panel-${type}`}>\n              {Object.keys(products[type]).map((category) => (\n                <Flex flexDir='column' gap='4' key={category}>\n                  <Text\n                    fontWeight='semibold'\n                    fontSize='lg'\n                    letterSpacing='wider'\n                    textTransform='uppercase'\n                  >\n                    {category}\n                  </Text>\n                  <Flex flexWrap='wrap' gap='6'>\n                    {products[type][category].map((product) => (\n                      <Button\n                        gap='4'\n                        key={product.id}\n                        onClick={() => handleAddProduct(product)}\n                        variant='outline'\n                        _hover={{\n                          bg: 'yellow.500',\n                        }}\n                      >\n                        <Text>{product.name}</Text>\n                        <Text>{formatPrice(product.price)}</Text>\n                      </Button>\n                    ))}\n                  </Flex>\n                </Flex>\n              ))}\n            </TabPanel>\n          ))}\n        </TabPanels>\n      </Tabs>\n\n      <Card\n        as='form'\n        borderRadius='none'\n        h='fit-content'\n        onSubmit={handleCreateOrder}\n      >\n        <CardHeader px={{ base: '4', lg: '12' }} pt={{ base: '4', lg: '8' }}>\n          <Text\n            fontWeight='semibold'\n            fontSize='lg'\n            letterSpacing='wider'\n            textTransform='uppercase'\n          >\n            Resumen de la orden\n          </Text>\n        </CardHeader>\n        <CardBody px={{ base: '4', lg: '12' }}>\n          <Flex flexDir='column' gap='4'>\n            <Input\n              name='client'\n              placeholder='Nombre del cliente'\n              required\n              size='lg'\n            />\n            {orderProducts?.map((product) => (\n              <Grid\n                alignItems='center'\n                gap={{ base: '4', lg: '8' }}\n                key={product.id}\n                templateColumns={{\n                  base: '8fr 3fr 1fr',\n                  lg: '9fr 2fr 1fr',\n                }}\n              >\n                <Text>{product.name}</Text>\n                <Text>{formatPrice(product.price)}</Text>\n                <IconButton\n                  colorScheme='yellow'\n                  icon={<CloseIcon />}\n                  onClick={() => handleDeleteProduct(product)}\n                  size='sm'\n                  variant='outline'\n                />\n              </Grid>\n            ))}\n            <Divider />\n            <Grid\n              alignItems='center'\n              fontWeight='semibold'\n              gap={{ base: '4', lg: '8' }}\n              templateColumns={{\n                base: '8fr 3fr 1fr',\n                lg: '9fr 2fr 1fr',\n              }}\n            >\n              <Text>TOTAL</Text>\n              <Text>{formatPrice(total)}</Text>\n            </Grid>\n          </Flex>\n        </CardBody>\n        <CardFooter px={{ base: '4', lg: '12' }} pb={{ base: '4', lg: '8' }}>\n          <Button\n            colorScheme='yellow'\n            ml='auto'\n            size='lg'\n            type='submit'\n            variant='outline'\n            _hover={{\n              bg: 'yellow.500',\n              borderColor: 'yellow.500',\n              color: 'white',\n              fontWeight: 'semibold',\n            }}\n          >\n            Enviar orden\n          </Button>\n        </CardFooter>\n      </Card>\n    </SimpleGrid>\n  );\n};\n\nexport default NewOrder;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL:\n    process.env.NODE_ENV === 'production'\n      ? '04-burger-queen-api.vercel.app'\n      : 'http://localhost:3000',\n});\n\ninstance.interceptors.request.use((config) => {\n  config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`;\n  return config;\n});\n\nexport default instance;\n","import axios from './config';\n\nexport const getOrders = () => {\n  return axios.get('/orders').then((res) => res.data);\n};\n\nexport const createOrder = (order) => {\n  return axios.post('/orders', order).then((res) => res.data);\n};\n\nexport const updateOrder = (id, order) => {\n  return axios.put(`/orders/${id}`, order).then((res) => res.data);\n};\n","import axios from './config';\n\nexport const getProducts = () => {\n  return axios.get('/products').then((res) => res.data);\n};\n\nexport const createProduct = (product) => {\n  return axios.post('/products', product).then((res) => res.data);\n};\n\nexport const getProduct = (id) => {\n  return axios.get(`/products/${id}`).then((res) => res.data);\n};\n\nexport const updateProduct = (id, product) => {\n  return axios.put(`/products/${id}`, product).then((res) => res.data);\n};\n\nexport const deleteProduct = (id) => {\n  return axios.delete(`/products/${id}`).then((res) => res.data);\n};\n","export const formatPrice = (price) =>\n  new Intl.NumberFormat('es-MX', {\n    style: 'currency',\n    currency: 'MXN',\n  }).format(price);\n"],"names":["_useState","useState","_useState2","_slicedToArray","products","setProducts","_useState3","_useState4","orderProducts","setOrderProducts","_useState5","_useState6","total","setTotal","useEffect","reduce","acc","product","price","getProducts","then","_step","newProducts","_iterator","_createForOfIteratorHelper","s","n","done","item","value","category","type","push","err","e","f","_jsxs","SimpleGrid","columns","lg","gap","base","children","Tabs","colorScheme","isFitted","size","variant","_jsx","TabList","color","mb","Object","keys","map","Tab","letterSpacing","textTransform","_selected","bg","border","borderColor","fontWeight","TabPanels","TabPanel","as","Flex","flexDir","Text","fontSize","flexWrap","Button","onClick","concat","_toConsumableArray","handleAddProduct","_hover","name","formatPrice","id","Card","borderRadius","h","onSubmit","preventDefault","client","target","elements","user","JSON","parse","localStorage","getItem","createOrder","status","userId","CardHeader","px","pt","CardBody","Input","placeholder","required","Grid","alignItems","templateColumns","IconButton","icon","CloseIcon","filter","handleDeleteProduct","Divider","CardFooter","pb","ml","instance","axios","baseURL","interceptors","request","use","config","headers","Authorization","getOrders","res","data","order","updateOrder","createProduct","getProduct","updateProduct","deleteProduct","Intl","NumberFormat","style","currency","format"],"sourceRoot":""}